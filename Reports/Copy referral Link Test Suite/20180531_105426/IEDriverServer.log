I 2018-05-31 10:54:29:426 server.cc(86) Starting WebDriver server on port: '1119' on host: ''
T 2018-05-31 10:54:29:427 server.cc(634) Entering Server::PopulateCommandRepository
T 2018-05-31 10:54:29:427 IEServer.cpp(32) Entering IEServer::IEServer
I 2018-05-31 10:54:29:427 IEServer.cpp(33) Driver version: 3.6.0.0 (32-bit)
T 2018-05-31 10:54:29:427 server.cc(121) Entering Server::Start
D 2018-05-31 10:54:29:427 server.cc(148) Civetweb ACL is -0.0.0.0/0,+127.0.0.1
T 2018-05-31 10:54:29:899 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:29:899 server.cc(183) Process request with: URI: /status HTTP verb: GET
body: {}
T 2018-05-31 10:54:29:899 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:29:899 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:29:899 server.cc(281) Command: GET /status {}
T 2018-05-31 10:54:29:899 IEServer.cpp(51) Entering IEServer::GetStatus
T 2018-05-31 10:54:29:900 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:29:900 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:29:900 response.cc(51) Entering Response::Serialize
D 2018-05-31 10:54:29:900 server.cc(338) Response: {"value":{"build":{"version":"3.6.0.0 (32-bit)"},"message":"Ready to create session","os":{"arch":"x64","name":"windows","version":"6.1.7601.18015 (win7sp1_gdr.121129-1432)"},"ready":true}}

T 2018-05-31 10:54:29:900 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:29:900 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:29:900 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:30:067 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:30:068 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:30:068 server.cc(183) Process request with: URI: /session HTTP verb: POST
body: {
  "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
  "capabilities": {
    "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
    "firstMatch": [
      {"browserName":"internet explorer","platformName":"windows","se:ieOptions":{"ie.usePerProcessProxy":"true"}}
    ]
  }
}
T 2018-05-31 10:54:30:068 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:30:068 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:30:068 server.cc(281) Command: POST /session {
  "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
  "capabilities": {
    "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
    "firstMatch": [
      {"browserName":"internet explorer","platformName":"windows","se:ieOptions":{"ie.usePerProcessProxy":"true"}}
    ]
  }
}
T 2018-05-31 10:54:30:068 IEServer.cpp(42) Entering IEServer::InitializeSession
T 2018-05-31 10:54:30:068 IESession.cpp(38) Entering IESession::Initialize
D 2018-05-31 10:54:30:068 IESession.cpp(53) Mutex acquired for session initalization
T 2018-05-31 10:54:30:068 IECommandExecutor.cpp(386) Entering IECommandExecutor::ThreadProc
T 2018-05-31 10:54:30:071 IECommandExecutor.cpp(47) Entering IECommandExecutor::OnCreate
T 2018-05-31 10:54:30:071 IECommandExecutor.cpp(753) Entering IECommandExecutor::PopulateElementFinderMethods
T 2018-05-31 10:54:30:071 InputManager.cpp(40) Entering InputManager::InputManager
T 2018-05-31 10:54:30:071 InputManager.cpp(75) Entering InputManager::Initialize
T 2018-05-31 10:54:30:071 BrowserFactory.cpp(998) Entering BrowserFactory::GetExecutableLocation
T 2018-05-31 10:54:30:071 BrowserFactory.cpp(1039) Entering BrowserFactory::GetIEVersion
T 2018-05-31 10:54:30:072 CommandHandlerRepository.cpp(108) Entering CommandHandlerRepository::PopulateCommandHandlers
T 2018-05-31 10:54:30:072 IESession.cpp(99) Created thread for command executor returns HWND: '000704A2'
T 2018-05-31 10:54:30:072 IESession.cpp(103) Session id is retrived from command executor window: '83b19565-d7c2-4482-9863-957ad2d7a048'
D 2018-05-31 10:54:30:072 IESession.cpp(109) Releasing session initialization mutex
T 2018-05-31 10:54:30:072 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:30:072 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:30:072 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:30:072 command.cc(36) Raw JSON command: { "name" : "newSession", "locator" : { }, "parameters" : {
  "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
  "capabilities": {
    "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
    "firstMatch": [
      {"browserName":"internet explorer","platformName":"windows","se:ieOptions":{"ie.usePerProcessProxy":"true"}}
    ]
  }
} }
T 2018-05-31 10:54:30:072 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:30:072 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:30:072 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
D 2018-05-31 10:54:30:073 CommandHandlers\NewSessionCommandHandler.cpp(46) Found W3C capabilities structure
D 2018-05-31 10:54:30:073 CommandHandlers\NewSessionCommandHandler.cpp(505) Validating capabilities object
D 2018-05-31 10:54:30:073 CommandHandlers\NewSessionCommandHandler.cpp(505) Validating capabilities object
D 2018-05-31 10:54:30:073 CommandHandlers\NewSessionCommandHandler.cpp(535) Found browserNamecapability. Validating value type is string.
D 2018-05-31 10:54:30:073 CommandHandlers\NewSessionCommandHandler.cpp(564) Found platformNamecapability. Validating value type is string.
D 2018-05-31 10:54:30:073 CommandHandlers\NewSessionCommandHandler.cpp(794) Found proxycapability. Validating value type is object.
T 2018-05-31 10:54:30:073 BrowserFactory.cpp(113) Entering BrowserFactory::Initialize
T 2018-05-31 10:54:30:073 IECommandExecutor.cpp(631) Entering IECommandExecutor::CreateNewBrowser
T 2018-05-31 10:54:30:073 BrowserFactory.cpp(142) Entering BrowserFactory::LaunchBrowserProcess
D 2018-05-31 10:54:30:073 BrowserFactory.cpp(146) Ignoring Protected Mode Settings: 0
D 2018-05-31 10:54:30:073 BrowserFactory.cpp(149) Checking validity of Protected Mode settings.
T 2018-05-31 10:54:30:073 BrowserFactory.cpp(1058) Entering BrowserFactory::ProtectedModeSettingsAreValid
D 2018-05-31 10:54:30:073 BrowserFactory.cpp(1061) Detected IE version: 11, Windows version supports Protected Mode: 1
T 2018-05-31 10:54:30:073 BrowserFactory.cpp(1135) Entering BrowserFactory::GetZoneProtectedModeSetting
D 2018-05-31 10:54:30:073 BrowserFactory.cpp(1152) Found Protected Mode setting value of 0 for zone 1
T 2018-05-31 10:54:30:073 BrowserFactory.cpp(1135) Entering BrowserFactory::GetZoneProtectedModeSetting
D 2018-05-31 10:54:30:073 BrowserFactory.cpp(1152) Found Protected Mode setting value of 0 for zone 2
T 2018-05-31 10:54:30:073 BrowserFactory.cpp(1135) Entering BrowserFactory::GetZoneProtectedModeSetting
D 2018-05-31 10:54:30:073 BrowserFactory.cpp(1152) Found Protected Mode setting value of 0 for zone 3
T 2018-05-31 10:54:30:073 BrowserFactory.cpp(1135) Entering BrowserFactory::GetZoneProtectedModeSetting
D 2018-05-31 10:54:30:073 BrowserFactory.cpp(1152) Found Protected Mode setting value of 0 for zone 4
D 2018-05-31 10:54:30:073 BrowserFactory.cpp(152) Has Valid Protected Mode Settings: 1
T 2018-05-31 10:54:30:073 BrowserFactory.cpp(226) Entering BrowserFactory::IsIELaunchURLAvailable
T 2018-05-31 10:54:30:076 BrowserFactory.cpp(130) Entering BrowserFactory::ClearCache
T 2018-05-31 10:54:30:076 BrowserFactory.cpp(247) Entering BrowserFactory::LaunchBrowserUsingIELaunchURL
D 2018-05-31 10:54:30:076 BrowserFactory.cpp(248) Starting IE using the IELaunchURL API
D 2018-05-31 10:54:30:208 BrowserFactory.cpp(202) IE launched successfully with process ID 5448
D 2018-05-31 10:54:30:208 BrowserFactory.cpp(208) Process with ID 5448 is executing iexplore.exe
T 2018-05-31 10:54:30:208 BrowserFactory.cpp(365) Entering BrowserFactory::AttachToBrowser
D 2018-05-31 10:54:30:208 BrowserFactory.cpp(375) Using Active Accessibility to find IWebBrowser2 interface
T 2018-05-31 10:54:30:208 BrowserFactory.cpp(414) Entering BrowserFactory::AttachToBrowserUsingActiveAccessibility
T 2018-05-31 10:54:30:288 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:30:288 server.cc(183) Process request with: URI: / HTTP verb: GET
body: {}
T 2018-05-31 10:54:30:288 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:30:585 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:30:585 server.cc(183) Process request with: URI: /favicon.ico HTTP verb: GET
body: {}
T 2018-05-31 10:54:30:585 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:30:585 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:30:585 server.cc(281) Command: GET /favicon.ico {}
D 2018-05-31 10:54:30:585 server.cc(338) Response: { "error" : "unknown method", "message" : "Command not found: GET /favicon.ico" }
T 2018-05-31 10:54:30:585 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:30:585 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:30:585 server.cc(445) Entering Server::SendHttpOk
D 2018-05-31 10:54:30:708 BrowserFactory.cpp(434) Found window handle 000205BA for window with class 'Internet Explorer_Server' belonging to process with id 5448
T 2018-05-31 10:54:30:708 BrowserFactory.cpp(329) Entering BrowserFactory::GetDocumentFromWindowHandle
D 2018-05-31 10:54:30:750 BrowserFactory.cpp(396) Ignoring zoom setting: 0
T 2018-05-31 10:54:30:750 BrowserFactory.cpp(574) Entering BrowserFactory::GetBrowserZoomLevel
T 2018-05-31 10:54:30:754 BrowserFactory.cpp(614) Entering BrowserFactory::GetZoomLevel
D 2018-05-31 10:54:30:765 BrowserFactory.cpp(694) Browser zoom level is 100%
I 2018-05-31 10:54:30:766 IECommandExecutor.cpp(654) Persistent hovering set to: 1
T 2018-05-31 10:54:30:766 ProxyManager.cpp(97) ProxyManager::SetProxySettings
D 2018-05-31 10:54:30:766 ProxyManager.cpp(113) Using existing system proxy settings.
T 2018-05-31 10:54:30:766 DocumentHost.cpp(33) Entering DocumentHost::DocumentHost
T 2018-05-31 10:54:30:766 CookieManager.cpp(49) Entering CookieManager::Initialize
T 2018-05-31 10:54:30:766 Browser.cpp(33) Entering Browser::Browser
T 2018-05-31 10:54:30:766 Browser.cpp(293) Entering Browser::AttachEvents
T 2018-05-31 10:54:30:767 IECommandExecutor.cpp(621) Entering IECommandExecutor::AddManagedBrowser
T 2018-05-31 10:54:30:767 IECommandExecutor.cpp(625) Setting current browser id to 5a8501fc-27e9-4c21-8dee-6c9231e203f6
T 2018-05-31 10:54:30:767 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:30:768 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:30:768 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:30:768 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:30:768 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:30:774 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:30:774 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:30:774 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
T 2018-05-31 10:54:30:774 response.cc(30) Entering Response::Deserialize
D 2018-05-31 10:54:30:774 server.cc(338) Response: {"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"internet explorer","browserVersion":"11","pageLoadStrategy":"normal","platformName":"windows","se:ieOptions":{"browserAttachTimeout":0,"elementScrollBehavior":0,"enablePersistentHover":true,"ie.browserCommandLineSwitches":"","ie.ensureCleanSession":false,"ie.fileUploadDialogTimeout":3000,"ie.forceCreateProcessApi":false,"ignoreProtectedModeSettings":false,"ignoreZoomSetting":false,"initialBrowserUrl":"http://localhost:1119/","nativeEvents":true,"requireWindowFocus":false},"setWindowRect":true},"sessionId":"83b19565-d7c2-4482-9863-957ad2d7a048"}}

T 2018-05-31 10:54:30:774 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:30:774 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:30:774 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:30:816 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:30:817 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:30:817 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/timeouts HTTP verb: POST
body: {"implicit":0}
T 2018-05-31 10:54:30:817 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:30:817 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:30:817 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/timeouts {"implicit":0}
T 2018-05-31 10:54:30:817 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:30:817 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:30:817 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:30:817 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:30:817 command.cc(36) Raw JSON command: { "name" : "setTimeouts", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"implicit":0} }
T 2018-05-31 10:54:30:817 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:30:817 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:30:817 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:30:817 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:30:817 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:30:817 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:30:817 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:30:817 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:30:817 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:30:817 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:30:817 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:30:817 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:30:827 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:30:827 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:30:827 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:30:827 server.cc(338) Response: {"value":null}

T 2018-05-31 10:54:30:827 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:30:827 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:30:827 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:30:836 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:30:836 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:30:836 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/execute/sync HTTP verb: POST
body: {"script":"return navigator.sayswho\u003d (function() { var ua\u003d navigator.userAgent, tem, M\u003d ua.match(/(opera|chrome|safari|firefox|msie|trident)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i) || []; if (/trident/i.test(M[1])) {     tem\u003d  /\\brv[ :]+(\\d+)/g.exec(ua) || [];     return \u0027IE \u0027+(tem[1] || \u0027\u0027); } if(M[1]\u003d\u003d\u003d \u0027Chrome\u0027) {     tem\u003d ua.match(/\\b(OPR|Edge)\\/(\\d+)/);     if(tem!\u003d null) return tem.slice(1).join(\u0027 \u0027).replace(\u0027OPR\u0027, \u0027Opera\u0027); } M\u003d M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, \u0027-?\u0027]; if((tem\u003d ua.match(/version\\/(\\d+)/i))!\u003d null) M.splice(1, 1, tem[1]); return M.join(\u0027 \u0027).replace(\u0027MSIE\u0027, \u0027IE\u0027);})();","args":[]}
T 2018-05-31 10:54:30:836 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:30:836 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:30:836 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/execute/sync {"script":"return navigator.sayswho\u003d (function() { var ua\u003d navigator.userAgent, tem, M\u003d ua.match(/(opera|chrome|safari|firefox|msie|trident)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i) || []; if (/trident/i.test(M[1])) {     tem\u003d  /\\brv[ :]+(\\d+)/g.exec(ua) || [];     return \u0027IE \u0027+(tem[1] || \u0027\u0027); } if(M[1]\u003d\u003d\u003d \u0027Chrome\u0027) {     tem\u003d ua.match(/\\b(OPR|Edge)\\/(\\d+)/);     if(tem!\u003d null) return tem.slice(1).join(\u0027 \u0027).replace(\u0027OPR\u0027, \u0027Opera\u0027); } M\u003d M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, \u0027-?\u0027]; if((tem\u003d ua.match(/version\\/(\\d+)/i))!\u003d null) M.splice(1, 1, tem[1]); return M.join(\u0027 \u0027).replace(\u0027MSIE\u0027, \u0027IE\u0027);})();","args":[]}
T 2018-05-31 10:54:30:836 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:30:836 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:30:836 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:30:836 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:30:836 command.cc(36) Raw JSON command: { "name" : "executeScript", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"script":"return navigator.sayswho\u003d (function() { var ua\u003d navigator.userAgent, tem, M\u003d ua.match(/(opera|chrome|safari|firefox|msie|trident)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i) || []; if (/trident/i.test(M[1])) {     tem\u003d  /\\brv[ :]+(\\d+)/g.exec(ua) || [];     return \u0027IE \u0027+(tem[1] || \u0027\u0027); } if(M[1]\u003d\u003d\u003d \u0027Chrome\u0027) {     tem\u003d ua.match(/\\b(OPR|Edge)\\/(\\d+)/);     if(tem!\u003d null) return tem.slice(1).join(\u0027 \u0027).replace(\u0027OPR\u0027, \u0027Opera\u0027); } M\u003d M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, \u0027-?\u0027]; if((tem\u003d ua.match(/version\\/(\\d+)/i))!\u003d null) M.splice(1, 1, tem[1]); return M.join(\u0027 \u0027).replace(\u0027MSIE\u0027, \u0027IE\u0027);})();","args":[]} }
T 2018-05-31 10:54:30:836 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:30:836 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:30:836 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:30:836 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:30:836 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:30:836 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:30:836 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:30:836 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:30:837 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:30:837 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:30:837 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:30:837 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:30:837 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:30:843 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:30:846 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:30:846 CommandHandlers\ExecuteScriptCommandHandler.cpp(85) Entering ExecuteScriptCommandHandler::PopulateArgumentArray
T 2018-05-31 10:54:30:846 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:30:846 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:30:858 Script.cpp(426) Entering Script::ConvertResultToJsonValue
T 2018-05-31 10:54:30:858 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:30:858 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:30:858 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:30:858 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:30:858 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:30:866 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:30:866 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:30:866 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:30:866 server.cc(338) Response: {"value":"IE 11"}

T 2018-05-31 10:54:30:866 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:30:866 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:30:866 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:30:877 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:30:877 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:30:877 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/url HTTP verb: POST
body: {"url":"https://roostify-dev-pr-6203.herokuapp.com/"}
T 2018-05-31 10:54:30:877 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:30:877 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:30:877 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/url {"url":"https://roostify-dev-pr-6203.herokuapp.com/"}
T 2018-05-31 10:54:30:877 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:30:877 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:30:877 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:30:877 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:30:877 command.cc(36) Raw JSON command: { "name" : "get", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"url":"https://roostify-dev-pr-6203.herokuapp.com/"} }
T 2018-05-31 10:54:30:877 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:30:877 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:30:877 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:30:877 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:30:877 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:30:877 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:30:877 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:30:881 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:30:881 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:30:881 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:30:881 Browser.cpp(318) Entring Browser::NavigateToUrl
T 2018-05-31 10:54:30:881 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:30:883 DocumentHost.cpp(142) Entering DocumentHost::SetFocusedFrameByElement
T 2018-05-31 10:54:30:883 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:30:883 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:30:883 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:30:883 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:30:883 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:30:883 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-05-31 10:54:30:883 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:30:883 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:30:883 Browser.cpp(438) Entering Browser::Wait
D 2018-05-31 10:54:30:883 Browser.cpp(448) Navigate Events Completed.
T 2018-05-31 10:54:30:883 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:30:883 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:30:884 Browser.cpp(484) Browser ReadyState is not at least '4'; it was 1
T 2018-05-31 10:54:30:885 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-05-31 10:54:30:933 Browser.cpp(50) Entering Browser::BeforeNavigate2
T 2018-05-31 10:54:31:085 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-05-31 10:54:31:085 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:31:085 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:31:085 Browser.cpp(438) Entering Browser::Wait
D 2018-05-31 10:54:31:085 Browser.cpp(448) Navigate Events Completed.
T 2018-05-31 10:54:31:085 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:31:085 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:31:085 Browser.cpp(464) Browser busy property is true.
T 2018-05-31 10:54:31:085 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-05-31 10:54:31:285 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-05-31 10:54:31:285 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:31:285 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:31:285 Browser.cpp(438) Entering Browser::Wait
D 2018-05-31 10:54:31:285 Browser.cpp(448) Navigate Events Completed.
T 2018-05-31 10:54:31:285 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:31:285 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:31:285 Browser.cpp(464) Browser busy property is true.
T 2018-05-31 10:54:31:285 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-05-31 10:54:31:490 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-05-31 10:54:31:490 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:31:490 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:31:490 Browser.cpp(438) Entering Browser::Wait
D 2018-05-31 10:54:31:490 Browser.cpp(448) Navigate Events Completed.
T 2018-05-31 10:54:31:490 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:31:490 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:31:491 Browser.cpp(464) Browser busy property is true.
T 2018-05-31 10:54:31:491 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-05-31 10:54:31:692 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-05-31 10:54:31:692 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:31:692 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:31:692 Browser.cpp(438) Entering Browser::Wait
D 2018-05-31 10:54:31:692 Browser.cpp(448) Navigate Events Completed.
T 2018-05-31 10:54:31:692 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:31:692 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:31:692 Browser.cpp(464) Browser busy property is true.
T 2018-05-31 10:54:31:693 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-05-31 10:54:31:893 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-05-31 10:54:31:893 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:31:893 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:31:893 Browser.cpp(438) Entering Browser::Wait
D 2018-05-31 10:54:31:893 Browser.cpp(448) Navigate Events Completed.
T 2018-05-31 10:54:31:893 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:31:893 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:31:893 Browser.cpp(464) Browser busy property is true.
T 2018-05-31 10:54:31:894 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-05-31 10:54:32:094 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-05-31 10:54:32:094 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:32:094 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:32:094 Browser.cpp(438) Entering Browser::Wait
D 2018-05-31 10:54:32:094 Browser.cpp(448) Navigate Events Completed.
T 2018-05-31 10:54:32:094 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:32:094 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:32:094 Browser.cpp(464) Browser busy property is true.
T 2018-05-31 10:54:32:095 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-05-31 10:54:32:295 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-05-31 10:54:32:295 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:32:295 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:32:295 Browser.cpp(438) Entering Browser::Wait
D 2018-05-31 10:54:32:295 Browser.cpp(448) Navigate Events Completed.
T 2018-05-31 10:54:32:295 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:32:295 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:32:341 Browser.cpp(464) Browser busy property is true.
T 2018-05-31 10:54:32:341 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-05-31 10:54:32:541 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-05-31 10:54:32:541 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:32:541 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:32:541 Browser.cpp(438) Entering Browser::Wait
D 2018-05-31 10:54:32:541 Browser.cpp(448) Navigate Events Completed.
T 2018-05-31 10:54:32:541 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:32:541 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:32:541 Browser.cpp(464) Browser busy property is true.
T 2018-05-31 10:54:32:542 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-05-31 10:54:32:742 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-05-31 10:54:32:742 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:32:742 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:32:742 Browser.cpp(438) Entering Browser::Wait
D 2018-05-31 10:54:32:742 Browser.cpp(448) Navigate Events Completed.
T 2018-05-31 10:54:32:742 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:32:742 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:32:742 Browser.cpp(464) Browser busy property is true.
T 2018-05-31 10:54:32:743 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-05-31 10:54:32:921 Browser.cpp(96) Entering Browser::DocumentComplete
D 2018-05-31 10:54:32:921 ElementRepository.cpp(113) Refreshing managed element cache. Found 0 to remove from cache.
T 2018-05-31 10:54:32:943 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-05-31 10:54:32:943 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:32:943 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:32:943 Browser.cpp(438) Entering Browser::Wait
D 2018-05-31 10:54:32:943 Browser.cpp(448) Navigate Events Completed.
T 2018-05-31 10:54:32:943 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:32:943 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:32:945 Browser.cpp(508) Waiting for document to complete...
T 2018-05-31 10:54:32:945 Browser.cpp(522) Entering Browser::IsDocumentNavigating
D 2018-05-31 10:54:32:951 Browser.cpp(513) Not in navigating state
T 2018-05-31 10:54:32:952 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:32:952 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:32:952 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:32:952 server.cc(338) Response: {"value":null}

T 2018-05-31 10:54:32:952 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:32:952 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:32:952 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:32:977 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:32:977 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:32:977 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/window/maximize HTTP verb: POST
body: {}
T 2018-05-31 10:54:32:977 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:32:977 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:32:977 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/window/maximize {}
T 2018-05-31 10:54:32:977 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:32:977 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:32:981 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:32:981 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:32:981 command.cc(36) Raw JSON command: { "name" : "maximizeWindow", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {} }
T 2018-05-31 10:54:32:982 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:32:982 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:32:982 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:32:982 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:32:982 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:32:982 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:32:982 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-05-31 10:54:32:982 IESession.cpp(212) Beginning wait for response length to be not zero
D 2018-05-31 10:54:32:982 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:32:982 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:32:982 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:32:982 Browser.cpp(416) Entering Browser::GetTopLevelWindowHandle
T 2018-05-31 10:54:32:983 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:32:983 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:32:983 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:32:983 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:32:983 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:32:992 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:32:992 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:32:992 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:32:992 server.cc(338) Response: {"value":{"height":1000,"width":1296,"x":-8,"y":-8}}

T 2018-05-31 10:54:32:992 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:32:992 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:32:992 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:33:659 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:33:659 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:33:659 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:33:659 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:33:659 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:33:659 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:33:659 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:33:659 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:33:660 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:33:660 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:33:660 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:33:660 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:33:660 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:33:660 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:33:660 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:33:660 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:33:660 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:33:660 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:33:660 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:33:661 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:33:661 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:33:661 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:33:661 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:33:661 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:33:661 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:33:661 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:33:661 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:33:661 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:33:698 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:33:702 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:33:703 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:33:703 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:33:703 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:33:703 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:33:703 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:33:703 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:33:723 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:33:725 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:33:726 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:33:731 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:33:731 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:33:981 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:33:981 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:33:981 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:33:981 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:33:981 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:33:981 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:33:981 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:33:981 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:33:981 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:33:981 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:33:981 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:33:981 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:34:484 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:34:484 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:34:484 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:34:484 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:34:484 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:34:484 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:34:484 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:34:484 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:34:484 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:34:484 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:34:484 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:34:485 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:34:485 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:34:485 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:34:485 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:34:485 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:34:485 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:34:485 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:34:485 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:34:485 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:34:485 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:34:485 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:34:485 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:34:485 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:34:485 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:34:485 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:34:485 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:34:485 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:34:493 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:34:498 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:34:498 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:34:498 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:34:498 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:34:498 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:34:498 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:34:498 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:34:524 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:34:525 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:34:526 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:34:527 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:34:527 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:34:778 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:34:778 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:34:778 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:34:778 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:34:778 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:34:778 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:34:778 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:34:778 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:34:778 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:34:778 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:34:778 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:34:778 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:35:282 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:35:282 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:35:282 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:35:282 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:35:282 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:35:282 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:35:283 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:35:283 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:35:283 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:35:283 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:35:283 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:35:283 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:35:283 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:35:283 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:35:283 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:35:283 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:35:283 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:35:283 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:35:283 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:35:283 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:35:283 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:35:283 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:35:283 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:35:283 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:35:283 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:35:283 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:35:283 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:35:283 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:35:291 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:35:296 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:35:296 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:35:296 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:35:296 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:35:296 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:35:296 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:35:296 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:35:325 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:35:327 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:35:328 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:35:330 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:35:330 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:35:580 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:35:580 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:35:580 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:35:580 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:35:580 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:35:580 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:35:580 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:35:580 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:35:580 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:35:580 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:35:580 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:35:580 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:36:084 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:36:084 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:36:084 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:36:084 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:36:084 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:36:084 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:36:084 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:36:084 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:36:084 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:36:084 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:36:084 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:36:084 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:36:085 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:36:085 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:36:085 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:36:085 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:36:085 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:36:085 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:36:085 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:36:085 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:36:085 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:36:085 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:36:085 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:36:085 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:36:085 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:36:085 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:36:085 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:36:085 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:36:096 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:36:104 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:36:104 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:36:104 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:36:104 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:36:104 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:36:104 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:36:104 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:36:125 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:36:126 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:36:128 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:36:131 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:36:131 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:36:381 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:36:381 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:36:381 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:36:381 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:36:381 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:36:381 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:36:381 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:36:381 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:36:381 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:36:381 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:36:381 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:36:381 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:36:884 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:36:884 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:36:884 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:36:884 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:36:884 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:36:884 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:36:884 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:36:885 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:36:885 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:36:885 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:36:885 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:36:885 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:36:885 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:36:885 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:36:885 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:36:885 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:36:885 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:36:885 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:36:885 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:36:885 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:36:885 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:36:885 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:36:885 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:36:885 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:36:885 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:36:885 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:36:885 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:36:885 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:36:900 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:36:907 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:36:907 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:36:907 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:36:907 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:36:907 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:36:907 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:36:907 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:36:935 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:36:937 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:36:939 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:36:941 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:36:941 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:37:191 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:37:191 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:37:191 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:37:191 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:37:191 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:37:191 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:37:191 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:37:191 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:37:191 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:37:191 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:37:191 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:37:191 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:37:695 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:37:695 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:37:695 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:37:695 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:37:695 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:37:695 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:37:695 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:37:695 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:37:695 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:37:695 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:37:695 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:37:696 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:37:696 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:37:696 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:37:696 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:37:696 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:37:696 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:37:696 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:37:696 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:37:696 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:37:696 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:37:696 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:37:696 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:37:696 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:37:696 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:37:696 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:37:696 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:37:696 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:37:703 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:37:707 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:37:707 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:37:707 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:37:707 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:37:707 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:37:707 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:37:707 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:37:727 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:37:729 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:37:730 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:37:731 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:37:731 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:37:982 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:37:982 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:37:982 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:37:982 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:37:982 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:37:982 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:37:982 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:37:982 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:37:982 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:37:982 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:37:982 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:37:982 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:38:486 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:38:486 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:38:486 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:38:486 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:38:486 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:38:486 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:38:486 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:38:486 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:38:487 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:38:487 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:38:487 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:38:487 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:38:487 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:38:487 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:38:487 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:38:487 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:38:487 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:38:487 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:38:487 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:38:487 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:38:487 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:38:487 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:38:487 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:38:487 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:38:487 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:38:487 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:38:487 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:38:487 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:38:492 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:38:496 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:38:496 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:38:496 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:38:496 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:38:496 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:38:496 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:38:496 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:38:515 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:38:517 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:38:519 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:38:521 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:38:521 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:38:772 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:38:772 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:38:772 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:38:772 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:38:772 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:38:772 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:38:772 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:38:772 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:38:772 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:38:772 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:38:772 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:38:772 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:39:274 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:39:274 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:39:274 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:39:274 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:39:274 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:39:274 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:39:274 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:39:274 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:39:274 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:39:274 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:39:274 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:39:274 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:39:274 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:39:274 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:39:274 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:39:274 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:39:274 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:39:275 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:39:275 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:39:275 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:39:275 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:39:275 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:39:275 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:39:275 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:39:275 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:39:275 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:39:275 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:39:275 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:39:281 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:39:284 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:39:284 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:39:284 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:39:284 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:39:284 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:39:284 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:39:284 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:39:302 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:39:303 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:39:305 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:39:307 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:39:307 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:39:557 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:39:557 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:39:557 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:39:557 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:39:557 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:39:557 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:39:557 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:39:557 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:39:557 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:39:557 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:39:557 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:39:557 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:40:061 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:40:061 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:40:061 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:40:061 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:40:061 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:40:061 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:40:061 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:40:061 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:40:061 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:40:061 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:40:061 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:40:062 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:40:062 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:40:062 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:40:062 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:40:062 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:40:062 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:40:062 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:40:062 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:40:062 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:40:062 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:40:062 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:40:062 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:40:062 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:40:062 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:40:062 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:40:062 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:40:062 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:40:072 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:40:079 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:40:079 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:40:079 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:40:079 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:40:079 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:40:079 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:40:079 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:40:112 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:40:115 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:40:117 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:40:121 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:40:121 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:40:371 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:40:371 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:40:371 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:40:371 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:40:371 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:40:371 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:40:371 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:40:371 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:40:371 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:40:371 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:40:371 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:40:371 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:40:874 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:40:874 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:40:874 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:40:874 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:40:874 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:40:874 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:40:874 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:40:874 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:40:874 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:40:874 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:40:874 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:40:874 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:40:874 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:40:874 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:40:874 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:40:874 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:40:874 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:40:874 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:40:874 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:40:874 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:40:874 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:40:874 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:40:874 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:40:874 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:40:874 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:40:874 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:40:874 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:40:874 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:40:882 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:40:886 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:40:886 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:40:886 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:40:886 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:40:886 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:40:886 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:40:886 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:40:905 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:40:906 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:40:907 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:40:908 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:40:908 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:41:159 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:41:159 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:41:159 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:41:159 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:41:159 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:41:159 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:41:159 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:41:159 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:41:159 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:41:159 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:41:159 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:41:159 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:41:662 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:41:662 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:41:662 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:41:662 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:41:662 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:41:662 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:41:662 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:41:662 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:41:663 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:41:663 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:41:663 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:41:663 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:41:663 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:41:663 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:41:663 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:41:663 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:41:663 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:41:663 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:41:663 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:41:663 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:41:663 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:41:663 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:41:663 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:41:663 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:41:663 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:41:663 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:41:663 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:41:663 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:41:669 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:41:673 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:41:674 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:41:674 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:41:674 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:41:674 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:41:674 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:41:674 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:41:691 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:41:692 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:41:693 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:41:695 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:41:695 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:41:945 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:41:945 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:41:945 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:41:945 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:41:945 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:41:945 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:41:945 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:41:945 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:41:945 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:41:945 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:41:945 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:41:945 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:42:454 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:42:454 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:42:454 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:42:454 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:42:454 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:42:454 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:42:454 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:42:454 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:42:454 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:42:454 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:42:454 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:42:454 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:42:454 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:42:454 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:42:454 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:42:454 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:42:454 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:42:454 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:42:454 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:42:455 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:42:455 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:42:455 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:42:455 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:42:455 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:42:455 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:42:455 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:42:455 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:42:455 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:42:463 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:42:468 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:42:468 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:42:468 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:42:468 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:42:468 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:42:468 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:42:468 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:42:486 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:42:487 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:42:488 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:42:490 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:42:490 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:42:741 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:42:741 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:42:741 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:42:741 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:42:741 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:42:741 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:42:741 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:42:741 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:42:741 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:42:741 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:42:741 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:42:741 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:43:245 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:43:245 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:43:245 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:43:245 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:43:245 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:43:245 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:43:245 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:43:245 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:43:245 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:43:245 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:43:245 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:43:245 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:43:245 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:43:245 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:43:245 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:43:245 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:43:245 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:43:245 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:43:245 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:43:245 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:43:245 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:43:246 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:43:246 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:43:246 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:43:246 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:43:246 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:43:246 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:43:246 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:43:255 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:43:261 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:43:261 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:43:261 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:43:261 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:43:261 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:43:261 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:43:261 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:43:285 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:43:287 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:43:288 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:43:289 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:43:289 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:43:540 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:43:540 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:43:540 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:43:540 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:43:540 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:43:540 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:43:540 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:43:540 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:43:540 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:43:540 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:43:540 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:43:540 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:44:043 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:44:043 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:44:043 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:44:043 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:44:043 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:44:043 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:44:043 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:44:043 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:44:044 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:44:044 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:44:044 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:44:044 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:44:044 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:44:044 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:44:044 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:44:044 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:44:044 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:44:044 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:44:044 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:44:044 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:44:044 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:44:044 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:44:044 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:44:044 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:44:045 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:44:045 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:44:045 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:44:045 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:44:057 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:44:061 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:44:061 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:44:061 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:44:061 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:44:061 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:44:061 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:44:062 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:44:080 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:44:081 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:44:083 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:44:084 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:44:084 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:44:334 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:44:334 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:44:334 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:44:334 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:44:334 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:44:334 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:44:334 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:44:334 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:44:334 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:44:334 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:44:334 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:44:334 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:44:836 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:44:836 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:44:836 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:44:836 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:44:836 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:44:836 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:44:836 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:44:836 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:44:837 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:44:837 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:44:837 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:44:837 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:44:837 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:44:837 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:44:837 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:44:837 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:44:837 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:44:837 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:44:837 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:44:837 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:44:837 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:44:837 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:44:837 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:44:837 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:44:837 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:44:837 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:44:837 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:44:837 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:44:844 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:44:849 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:44:849 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:44:849 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:44:849 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:44:849 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:44:849 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:44:849 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:44:865 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:44:867 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:44:868 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:44:869 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:44:869 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:45:119 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:45:119 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:45:119 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:45:119 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:45:119 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:45:119 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:45:119 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:45:119 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:45:119 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:45:119 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:45:119 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:45:119 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:45:622 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:45:622 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:45:622 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:45:622 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:45:622 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:45:622 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:45:622 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:45:622 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:45:622 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:45:623 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:45:623 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:45:623 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:45:623 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:45:623 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:45:623 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:45:623 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:45:623 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:45:623 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:45:623 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:45:623 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:45:623 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:45:623 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:45:623 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:45:623 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:45:623 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:45:623 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:45:623 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:45:623 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:45:629 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:45:632 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:45:632 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:45:632 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:45:632 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:45:632 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:45:632 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:45:632 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:45:649 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:45:651 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:45:652 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:45:653 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:45:653 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:45:904 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:45:904 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:45:904 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:45:904 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:45:904 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:45:904 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:45:904 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:45:904 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:45:904 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:45:904 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:45:904 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:45:904 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:46:408 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:46:408 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:46:408 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:46:408 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:46:408 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:46:408 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:46:408 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:46:408 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:46:408 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:46:408 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:46:408 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:46:408 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:46:408 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:46:408 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:46:408 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:46:408 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:46:408 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:46:408 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:46:408 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:46:409 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:46:409 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:46:409 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:46:409 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:46:409 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:46:409 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:46:409 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:46:409 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:46:409 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:46:419 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:46:425 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:46:425 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:46:425 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:46:425 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:46:425 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:46:425 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:46:425 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:46:445 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:46:447 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:46:448 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:46:449 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:46:449 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:46:700 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:46:700 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:46:700 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:46:700 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:46:700 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:46:700 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:46:700 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:46:700 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:46:700 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:46:700 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:46:700 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:46:700 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:47:205 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:47:205 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:47:205 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:47:205 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:47:205 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:47:205 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:47:205 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:47:205 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:47:205 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:47:205 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:47:205 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:47:205 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:47:205 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:47:205 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:47:205 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:47:205 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:47:205 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:47:205 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:47:205 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:47:206 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:47:206 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:47:206 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:47:206 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:47:206 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:47:206 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:47:206 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:47:206 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:47:206 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:47:215 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:47:220 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:47:220 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:47:220 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:47:220 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:47:220 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:47:220 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:47:220 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:47:244 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:47:245 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:47:246 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:47:247 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:47:247 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:47:497 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:47:497 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:47:497 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:47:497 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:47:497 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:47:497 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:47:497 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:47:497 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:47:497 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:47:497 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:47:497 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:47:497 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:48:001 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:48:001 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:48:001 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:48:001 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:48:001 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:48:001 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:48:001 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:48:001 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:48:001 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:48:001 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:48:001 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:48:001 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:48:002 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:48:002 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:48:002 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:48:002 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:48:002 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:48:002 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:48:002 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:48:002 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:48:002 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:48:002 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:48:002 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:48:002 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:48:002 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:48:002 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:48:002 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:48:002 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:48:012 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:48:018 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:48:019 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:48:019 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:48:019 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:48:019 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:48:019 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:48:019 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:48:048 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:48:050 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:48:051 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:48:053 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:48:053 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:48:303 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:48:303 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:48:303 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:48:303 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:48:303 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:48:303 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:48:303 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:48:303 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:48:303 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:48:303 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:48:303 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:48:303 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:48:807 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:48:807 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:48:807 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:48:807 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:48:807 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:48:807 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:48:807 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:48:807 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:48:807 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:48:807 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:48:807 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:48:807 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:48:807 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:48:807 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:48:807 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:48:807 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:48:807 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:48:807 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:48:807 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:48:807 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:48:807 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:48:807 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:48:807 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:48:807 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:48:807 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:48:807 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:48:807 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:48:808 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:48:813 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:48:817 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:48:817 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:48:817 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:48:817 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:48:817 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:48:817 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:48:817 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:48:832 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:48:833 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:48:834 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:48:836 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:48:836 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:49:086 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:49:086 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:49:086 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:49:086 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:49:086 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:49:086 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:49:086 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:49:086 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:49:086 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:49:086 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:49:086 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:49:086 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:49:590 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:49:591 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:49:591 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:49:591 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:49:591 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:49:591 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:49:591 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:49:591 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:49:591 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:49:591 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:49:591 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:49:591 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:49:591 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:49:591 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:49:591 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:49:591 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:49:591 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:49:591 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:49:591 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:49:592 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:49:592 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:49:592 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:49:592 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:49:592 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:49:592 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:49:592 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:49:592 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:49:592 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:49:603 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:49:609 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:49:609 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:49:609 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:49:609 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:49:609 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:49:609 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:49:609 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:49:627 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:49:629 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:49:630 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:49:631 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:49:632 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:49:882 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:49:882 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:49:882 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:49:882 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:49:882 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:49:882 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:49:882 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:49:882 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:49:882 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:49:882 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:49:882 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:49:882 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:50:385 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:50:385 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:50:385 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:50:385 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:50:385 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:50:385 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:50:385 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:50:385 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:50:385 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:50:385 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:50:385 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:50:386 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:50:386 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:50:386 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:50:386 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:50:386 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:50:386 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:50:386 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:50:386 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:50:386 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:50:386 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:50:386 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:50:386 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:50:386 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:50:386 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:50:386 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:50:386 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:50:386 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:50:393 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:50:397 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:50:397 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:50:397 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:50:397 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:50:397 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:50:397 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:50:397 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:50:416 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:50:417 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:50:419 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:50:420 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:50:420 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:50:670 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:50:670 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:50:670 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:50:670 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:50:670 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:50:670 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:50:670 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:50:670 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:50:670 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:50:670 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:50:670 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:50:670 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:51:173 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:51:173 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:51:173 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:51:173 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:51:173 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:51:173 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:51:173 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:51:173 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:51:173 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:51:173 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:51:173 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:51:173 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:51:173 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:51:173 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:51:173 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:51:173 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:51:173 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:51:173 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:51:173 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:51:174 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:51:174 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:51:174 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:51:174 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:51:174 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:51:174 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:51:174 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:51:174 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:51:174 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:51:183 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:51:190 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:51:190 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:51:191 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:51:191 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:51:191 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:51:191 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:51:191 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:51:212 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:51:213 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:51:215 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:51:216 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:51:216 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:51:467 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:51:467 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:51:467 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:51:467 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:51:467 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:51:467 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:51:467 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:51:467 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:51:467 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:51:467 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:51:467 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:51:467 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:51:969 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:51:969 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:51:969 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:51:969 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:51:969 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:51:969 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:51:969 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:51:969 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:51:970 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:51:970 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:51:970 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:51:970 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:51:970 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:51:970 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:51:970 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:51:970 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:51:970 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:51:970 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:51:970 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:51:970 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:51:970 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:51:970 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:51:970 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:51:970 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:51:970 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:51:970 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:51:970 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:51:970 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:51:976 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:51:979 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:51:979 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:51:979 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:51:979 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:51:979 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:51:979 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:51:979 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:51:997 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:51:998 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:52:000 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:52:002 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:52:002 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:52:252 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:52:252 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:52:252 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:52:252 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:52:252 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:52:252 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:52:252 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:52:252 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:52:252 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:52:252 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:52:252 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:52:252 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:52:755 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:52:755 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:52:755 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:52:755 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:52:755 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:52:755 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:52:755 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:52:755 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:52:755 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:52:756 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:52:756 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:52:756 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:52:756 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:52:756 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:52:756 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:52:756 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:52:756 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:52:756 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:52:756 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:52:756 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:52:756 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:52:756 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:52:756 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:52:756 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:52:756 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:52:756 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:52:756 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:52:756 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:52:766 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:52:771 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:52:771 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:52:771 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:52:772 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:52:772 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:52:772 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:52:772 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:52:793 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:52:795 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:52:796 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:52:797 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:52:797 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:53:048 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:53:048 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:53:048 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:53:048 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:53:048 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:53:048 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:53:048 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:53:048 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:53:048 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:53:048 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:53:048 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:53:048 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:53:551 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:53:551 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:53:551 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:53:551 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:53:551 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:53:551 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:53:551 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:53:551 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:53:551 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:53:551 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:53:551 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:53:551 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:53:551 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:53:551 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:53:551 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:53:551 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:53:551 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:53:551 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:53:551 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:53:552 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:53:552 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:53:552 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:53:552 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:53:552 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:53:552 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:53:552 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:53:552 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:53:552 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:53:558 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:53:561 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:53:561 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:53:561 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:53:561 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:53:561 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:53:561 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:53:561 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:53:581 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:53:583 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:53:584 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:53:586 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:53:586 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:53:836 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:53:836 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:53:836 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:53:836 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:53:836 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:53:836 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:53:836 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:53:836 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:53:836 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:53:836 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:53:836 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:53:836 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:54:340 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:54:340 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:54:340 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:54:340 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:54:340 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:54:340 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:54:340 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:54:340 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:54:340 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:54:340 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:54:341 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:54:341 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:54:341 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:54:341 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:54:341 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:54:341 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:54:341 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:54:341 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:54:341 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:54:341 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:54:341 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:54:341 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:54:341 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:54:341 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:54:341 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:54:341 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:54:341 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:54:341 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:54:353 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:54:360 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:54:360 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:54:360 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:54:360 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:54:360 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:54:360 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:54:360 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:54:387 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:54:388 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:54:389 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:54:391 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:54:391 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:54:641 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:54:641 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:54:641 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:54:641 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:54:641 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:54:641 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:54:641 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:54:641 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:54:641 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:54:641 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:54:641 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:54:641 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:55:144 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:55:144 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:55:144 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:55:144 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:55:144 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:55:144 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:55:144 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:55:144 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:55:144 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:55:145 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:55:145 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:55:145 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:55:145 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:55:145 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:55:145 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:55:145 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:55:145 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:55:145 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:55:145 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:55:145 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:55:145 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:55:145 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:55:145 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:55:145 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:55:145 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:55:145 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:55:145 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:55:145 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:55:157 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:55:164 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:55:164 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:55:164 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:55:164 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:55:164 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:55:164 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:55:164 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:55:186 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:55:187 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:55:188 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:55:190 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:55:190 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:55:440 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:55:440 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:55:440 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:55:440 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:55:440 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:55:440 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:55:440 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:55:440 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:55:440 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:55:440 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:55:440 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:55:440 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:55:944 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:55:944 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:55:944 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:55:945 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:55:945 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:55:945 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:55:945 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:55:945 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:55:945 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:55:945 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:55:945 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:55:945 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:55:945 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:55:945 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:55:945 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:55:945 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:55:945 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:55:945 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:55:945 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:55:945 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:55:945 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:55:945 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:55:945 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:55:945 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:55:945 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:55:945 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:55:945 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:55:945 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:55:953 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:55:957 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:55:957 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:55:957 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:55:957 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:55:957 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:55:958 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:55:958 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:55:976 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:55:978 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:55:979 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:55:980 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:55:980 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:56:231 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:56:231 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:56:231 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:56:231 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:56:231 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:56:231 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:56:231 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:56:231 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:56:231 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:56:231 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:56:231 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:56:231 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:56:736 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:56:736 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:56:736 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:56:736 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:56:736 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:56:736 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:56:736 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:56:736 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:56:736 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:56:736 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:56:736 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:56:736 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:56:736 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:56:736 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:56:736 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:56:736 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:56:736 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:56:736 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:56:736 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:56:737 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:56:737 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:56:737 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:56:737 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:56:737 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:56:737 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:56:737 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:56:737 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:56:737 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:56:748 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:56:752 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:56:752 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:56:752 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:56:752 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:56:752 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:56:752 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:56:752 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:56:770 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:56:772 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:56:773 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:56:775 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:56:775 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:57:025 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:57:025 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:57:025 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:57:025 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:57:025 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:57:025 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:57:025 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:57:025 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:57:025 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:57:025 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:57:025 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:57:025 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:57:528 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:57:529 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:57:529 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:57:529 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:57:529 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:57:529 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:57:529 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:57:529 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:57:529 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:57:529 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:57:529 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:57:529 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:57:529 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:57:529 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:57:529 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:57:529 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:57:529 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:57:529 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:57:529 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:57:529 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:57:529 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:57:529 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:57:529 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:57:529 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:57:529 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:57:529 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:57:529 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:57:529 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:57:536 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:57:540 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:57:540 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:57:540 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:57:540 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:57:540 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:57:540 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:57:540 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:57:560 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:57:562 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:57:563 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:57:565 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:57:565 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:57:816 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:57:816 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:57:816 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:57:816 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:57:816 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:57:816 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:57:816 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:57:816 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:57:816 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:57:816 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:57:816 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:57:816 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:58:319 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:58:319 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:58:319 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:58:319 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:58:319 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:58:319 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:58:320 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:58:320 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:58:320 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:58:320 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:58:320 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:58:320 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:58:320 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:58:320 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:58:320 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:58:320 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:58:320 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:58:320 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:58:320 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:58:320 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:58:320 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:58:320 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:58:320 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:58:320 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:58:320 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:58:320 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:58:320 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:58:320 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:58:329 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:58:334 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:58:334 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:58:334 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:58:334 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:58:334 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:58:334 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:58:334 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:58:350 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:58:351 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:58:352 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:58:354 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:58:354 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:58:604 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:58:604 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:58:604 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:58:604 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:58:604 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:58:604 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:58:604 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:58:604 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:58:604 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:58:604 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:58:604 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:58:604 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:59:109 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:59:109 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:59:109 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:59:109 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:59:109 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:59:109 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:59:109 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:59:109 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:59:109 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:59:109 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:59:109 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:59:110 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:59:110 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:59:110 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:59:110 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:59:110 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:59:110 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:59:110 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:59:110 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:59:110 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:59:110 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:59:110 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:59:110 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:59:110 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:59:110 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-05-31 10:54:59:110 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[@placeholder = 'Email' and @type = 'text' and @name = 'user[email]' and @id = 'user_email']
T 2018-05-31 10:54:59:110 Browser.cpp(126) Entering Browser::GetDocument
I 2018-05-31 10:54:59:110 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-05-31 10:54:59:119 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-05-31 10:54:59:122 Script.cpp(49) Entering Script::Initialize
T 2018-05-31 10:54:59:122 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:59:122 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:59:122 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-05-31 10:54:59:122 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-05-31 10:54:59:123 Script.cpp(169) Entering Script::Execute
T 2018-05-31 10:54:59:123 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-05-31 10:54:59:137 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-05-31 10:54:59:139 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:59:140 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-05-31 10:54:59:141 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-05-31 10:54:59:141 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-05-31 10:54:59:391 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:54:59:391 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:59:391 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:59:391 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:54:59:391 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:59:393 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:59:393 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:59:393 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:59:393 server.cc(338) Response: {"value":[]}

T 2018-05-31 10:54:59:393 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:59:393 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:59:393 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:54:59:395 Browser.cpp(54) Entering Browser::OnQuit
T 2018-05-31 10:54:59:395 DocumentHost.cpp(252) Entering DocumentHost::PostQuitMessage
T 2018-05-31 10:54:59:395 IECommandExecutor.cpp(250) Entering IECommandExecutor::OnBrowserQuit
T 2018-05-31 10:54:59:395 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-05-31 10:54:59:395 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-05-31 10:54:59:395 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-05-31 10:54:59:395 IECommandExecutor.cpp(543) No alert handle is found
T 2018-05-31 10:54:59:395 Browser.cpp(300) Entering Browser::DetachEvents
T 2018-05-31 10:54:59:895 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:59:895 server.cc(238) Entering Server::ReadRequestBody
T 2018-05-31 10:54:59:895 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements HTTP verb: POST
body: {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:59:895 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:59:895 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:59:895 server.cc(281) Command: POST /session/83b19565-d7c2-4482-9863-957ad2d7a048/elements {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"}
T 2018-05-31 10:54:59:895 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:59:895 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:59:895 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:59:895 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:59:895 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {"value":"//input[@placeholder \u003d \u0027Email\u0027 and @type \u003d \u0027text\u0027 and @name \u003d \u0027user[email]\u0027 and @id \u003d \u0027user_email\u0027]","using":"xpath"} }
T 2018-05-31 10:54:59:895 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:59:895 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:59:895 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:59:895 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:59:895 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2018-05-31 10:54:59:895 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2018-05-31 10:54:59:895 IECommandExecutor.cpp(503) Unable to find current browser
T 2018-05-31 10:54:59:895 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-05-31 10:54:59:895 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-05-31 10:54:59:895 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-05-31 10:54:59:895 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:59:895 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2018-05-31 10:54:59:896 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2018-05-31 10:54:59:896 ElementFinder.cpp(167) Unable to get browser
T 2018-05-31 10:54:59:896 response.cc(85) Entering Response::SetErrorResponse
T 2018-05-31 10:54:59:896 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:59:896 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:59:896 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2018-05-31 10:54:59:896 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2018-05-31 10:54:59:896 IECommandExecutor.cpp(520) Unable to get current browser
T 2018-05-31 10:54:59:896 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:59:905 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:59:905 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:59:905 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:59:905 server.cc(338) Response: {"value":{"data":null,"error":"no such window","message":"Unable to find elements on closed window","stacktrace":""}}

T 2018-05-31 10:54:59:905 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:59:905 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:59:905 server.cc(465) Entering Server::SendHttpBadRequest
T 2018-05-31 10:54:59:971 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:54:59:971 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048/screenshot HTTP verb: GET
body: {}
T 2018-05-31 10:54:59:971 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:54:59:971 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:54:59:971 server.cc(281) Command: GET /session/83b19565-d7c2-4482-9863-957ad2d7a048/screenshot {}
T 2018-05-31 10:54:59:971 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:54:59:971 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:54:59:971 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:54:59:971 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:54:59:971 command.cc(36) Raw JSON command: { "name" : "takeScreenshot", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {} }
T 2018-05-31 10:54:59:971 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:54:59:971 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:54:59:971 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:54:59:971 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:59:971 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2018-05-31 10:54:59:971 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2018-05-31 10:54:59:971 IECommandExecutor.cpp(503) Unable to find current browser
T 2018-05-31 10:54:59:971 CommandHandlers\ScreenshotCommandHandler.cpp(38) Entering ScreenshotCommandHandler::ExecuteInternal
T 2018-05-31 10:54:59:971 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:59:971 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2018-05-31 10:54:59:971 IECommandExecutor.cpp(591) Browser ID requested was an empty string
T 2018-05-31 10:54:59:971 response.cc(91) Entering Response::SetErrorResponse
W 2018-05-31 10:54:59:971 response.cc(92) Error response has status code 23 and message 'Unable to get browser' message
T 2018-05-31 10:54:59:971 response.cc(85) Entering Response::SetErrorResponse
T 2018-05-31 10:54:59:971 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:54:59:971 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:54:59:971 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2018-05-31 10:54:59:971 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2018-05-31 10:54:59:971 IECommandExecutor.cpp(520) Unable to get current browser
T 2018-05-31 10:54:59:971 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:54:59:981 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:54:59:981 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:54:59:981 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-05-31 10:54:59:981 server.cc(338) Response: {"value":{"data":null,"error":"no such window","message":"Unable to get browser","stacktrace":""}}

T 2018-05-31 10:54:59:981 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:54:59:981 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:54:59:981 server.cc(465) Entering Server::SendHttpBadRequest
T 2018-05-31 10:55:02:120 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:55:02:120 server.cc(183) Process request with: URI: /session/83b19565-d7c2-4482-9863-957ad2d7a048 HTTP verb: DELETE
body: {}
T 2018-05-31 10:55:02:120 server.cc(272) Entering Server::DispatchCommand
T 2018-05-31 10:55:02:120 server.cc(583) Entering Server::LookupCommand
D 2018-05-31 10:55:02:120 server.cc(281) Command: DELETE /session/83b19565-d7c2-4482-9863-957ad2d7a048 {}
T 2018-05-31 10:55:02:120 server.cc(378) Entering Server::LookupSession
T 2018-05-31 10:55:02:120 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-05-31 10:55:02:120 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-05-31 10:55:02:120 command.cc(31) Entering Command::Deserialize
D 2018-05-31 10:55:02:120 command.cc(36) Raw JSON command: { "name" : "quit", "locator" : { "sessionid" : "83b19565-d7c2-4482-9863-957ad2d7a048" }, "parameters" : {} }
T 2018-05-31 10:55:02:120 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-05-31 10:55:02:120 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-05-31 10:55:02:120 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:55:02:120 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
W 2018-05-31 10:55:02:120 IECommandExecutor.cpp(591) Browser ID requested was an empty string
W 2018-05-31 10:55:02:120 IECommandExecutor.cpp(503) Unable to find current browser
T 2018-05-31 10:55:02:120 IECommandExecutor.cpp(607) Entering IECommandExecutor::GetManagedBrowserHandles
T 2018-05-31 10:55:02:120 response.cc(72) Entering Response::SetSuccessResponse
T 2018-05-31 10:55:02:120 response.cc(78) Entering Response::SetResponse
T 2018-05-31 10:55:02:120 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-05-31 10:55:02:120 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-05-31 10:55:02:120 IECommandExecutor.cpp(586) Current command executor is not valid
T 2018-05-31 10:55:02:120 response.cc(51) Entering Response::Serialize
T 2018-05-31 10:55:02:120 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-05-31 10:55:02:120 IESession.cpp(221) Found non-zero response length
T 2018-05-31 10:55:02:121 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-05-31 10:55:02:121 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
T 2018-05-31 10:55:02:121 server.cc(225) Entering Server::ShutDownSession
T 2018-05-31 10:55:02:121 IESession.cpp(119) Entering IESession::ShutDown
T 2018-05-31 10:55:02:121 IESession.cpp(173) Entering IESession::WaitForCommandExecutorExit
D 2018-05-31 10:55:02:121 IESession.cpp(150) Executor shutdown successful!
D 2018-05-31 10:55:02:121 IESession.cpp(158) Posting thread shutdown message
D 2018-05-31 10:55:02:121 IESession.cpp(161) Starting wait for thread completion
D 2018-05-31 10:55:02:121 IESession.cpp(164) Waiting for thread to end returned 4294967295
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(436) Shutdown message received
D 2018-05-31 10:55:02:121 server.cc(338) Response: {"value":null}

T 2018-05-31 10:55:02:121 server.cc(391) Entering Server::SendResponseToClient
T 2018-05-31 10:55:02:121 response.cc(30) Entering Response::Deserialize
T 2018-05-31 10:55:02:121 server.cc(445) Entering Server::SendHttpOk
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(97) Entering IECommandExecutor::OnDestroy
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(99) Clearing managed element cache
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(102) Closing command handler repository
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(104) Closing element finder
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(106) Closing input manager
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(108) Closing proxy manager
T 2018-05-31 10:55:02:121 ProxyManager.cpp(185) ProxyManager::RestoreProxySettings
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(110) Closing browser factory
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(112) Posting quit message
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(114) Leaving IECommandExecutor::OnDestroy
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(438) Returned from DestroyWindow()
D 2018-05-31 10:55:02:121 IECommandExecutor.cpp(447) Exited IECommandExecutor thread message loop
T 2018-05-31 10:55:02:124 server.cc(174) Entering Server::ProcessRequest
T 2018-05-31 10:55:02:124 server.cc(183) Process request with: URI: /shutdown HTTP verb: GET
body: {}
T 2018-05-31 10:55:02:124 server.cc(445) Entering Server::SendHttpOk
T 2018-05-31 10:55:02:124 IEServer.cpp(88) Entering IEServer::ShutDown
T 2018-05-31 10:55:02:125 WebDriver.cpp(54) Entering StopServer
T 2018-05-31 10:55:02:125 server.cc(165) Entering Server::Stop
